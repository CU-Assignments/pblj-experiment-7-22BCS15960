import java.sql.*;
import java.util.*;

public class StudentApp {

    // --- Model ---
    static class Student {
        private int studentID;
        private String name;
        private String department;
        private double marks;

        public Student(int studentID, String name, String department, double marks) {
            this.studentID = studentID;
            this.name = name;
            this.department = department;
            this.marks = marks;
        }

        public int getStudentID() { return studentID; }
        public String getName() { return name; }
        public String getDepartment() { return department; }
        public double getMarks() { return marks; }
    }

    // --- Controller ---
    static class StudentController {
        private final String url = "jdbc:mysql://localhost:3306/studentdb";
        private final String user = "root"; // change if needed
        private final String password = "your_password"; // change this

        private Connection getConnection() throws Exception {
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(url, user, password);
        }

        public void addStudent(Student s) throws Exception {
            Connection conn = getConnection();
            String query = "INSERT INTO students VALUES (?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, s.getStudentID());
            ps.setString(2, s.getName());
            ps.setString(3, s.getDepartment());
            ps.setDouble(4, s.getMarks());
            ps.executeUpdate();
            conn.close();
        }

        public List<Student> getAllStudents() throws Exception {
            List<Student> list = new ArrayList<>();
            Connection conn = getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM students");
            while (rs.next()) {
                list.add(new Student(rs.getInt("StudentID"), rs.getString("Name"),
                        rs.getString("Department"), rs.getDouble("Marks")));
            }
            conn.close();
            return list;
        }

        public void updateStudent(Student s) throws Exception {
            Connection conn = getConnection();
            String query = "UPDATE students SET Name=?, Department=?, Marks=? WHERE StudentID=?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, s.getName());
            ps.setString(2, s.getDepartment());
            ps.setDouble(3, s.getMarks());
            ps.setInt(4, s.getStudentID());
            ps.executeUpdate();
            conn.close();
        }

        public void deleteStudent(int id) throws Exception {
            Connection conn = getConnection();
            String query = "DELETE FROM students WHERE StudentID=?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, id);
            ps.executeUpdate();
            conn.close();
        }
    }

    // --- View ---
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        StudentController controller = new StudentController();

        while (true) {
            System.out.println("\n--- Student Management ---");
            System.out.println("1. Add Student");
            System.out.println("2. View Students");
            System.out.println("3. Update Student");
            System.out.println("4. Delete Student");
            System.out.println("5. Exit");
            System.out.print("Enter choice: ");
            int choice = sc.nextInt();

            try {
                switch (choice) {
                    case 1:
                        System.out.print("ID: ");
                        int id = sc.nextInt();
                        sc.nextLine();
                        System.out.print("Name: ");
                        String name = sc.nextLine();
                        System.out.print("Department: ");
                        String dept = sc.nextLine();
                        System.out.print("Marks: ");
                        double marks = sc.nextDouble();
                        controller.addStudent(new Student(id, name, dept, marks));
                        System.out.println("Student added.");
                        break;

                    case 2:
                        List<Student> list = controller.getAllStudents();
                        for (Student s : list) {
                            System.out.println("ID: " + s.getStudentID() + ", Name: " + s.getName()
                                    + ", Dept: " + s.getDepartment() + ", Marks: " + s.getMarks());
                        }
                        break;

                    case 3:
                        System.out.print("ID to update: ");
                        int uid = sc.nextInt();
                        sc.nextLine();
                        System.out.print("New Name: ");
                        String nname = sc.nextLine();
                        System.out.print("New Dept: ");
                        String ndept = sc.nextLine();
                        System.out.print("New Marks: ");
                        double nmarks = sc.nextDouble();
                        controller.updateStudent(new Student(uid, nname, ndept, nmarks));
                        System.out.println("Student updated.");
                        break;

                    case 4:
                        System.out.print("ID to delete: ");
                        int did = sc.nextInt();
                        controller.deleteStudent(did);
                        System.out.println("Student deleted.");
                        break;

                    case 5:
                        sc.close();
                        System.out.println("Exiting...");
                        return;

                    default:
                        System.out.println("Invalid option.");
                }
            } catch (Exception e) {
                System.out.println("Error: " + e.getMessage());
            }
        }
    }
}
